# 
# Licensed under the Apache License, Version 2.0 (the "License"); 
# you may not use this file except in compliance with the License.  
# You may obtain a copy of the License at 
#
#       http://www.apache.org/licenses/LICENSE-2.0 
#
# Unless required by applicable law or agreed to in writing, software 
# distributed under the License is distributed on an "AS IS" BASIS, 
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
#
# See the License for the specific language governing permissions and 
# limitations under the License.
#

# 
# Version/Product information
#
MAJOR_VERSION           = @MAJOR_VERSION@
MINOR_VERSION           = @MINOR_VERSION@
BUILD_VERSION           = @BUILD_VERSION@
PRODUCT_NAME            = lptest

# 
# Build directory
#
ifeq ($(OUTPUT_DIR),)
    OUTPUT_DIR          =   ../bld
endif

# 
# External product and include directories
#
ifeq ($(LUA_INCLUDES),)
    LUA_INCLUDES        = @lua_include_path@
endif

# 
# Default build mode
#
ifeq ($(BUILD_MODE),)
    BUILD_MODE          = @build_mode@
endif

LIBS    = -lpthread

DEBUG_CXXFLAGS          =   -g -fno-inline
RELEASE_CXXFLAGS        =   -O3
CORE_CXXFLAGS           =   -Wall               \
                            -I$(LUA_INCLUDES)   \
                            -I../src            \
                            -L$(OUTPUT_DIR)     \
                            -L$(LUA_INCLUDES)

###############  DO NOT MODIFY BELOW THIS   ##############

VERSION                 = $(MAJOR_VERSION).$(MINOR_VERSION).$(BUILD_VERSION)

OUTPUT_DIR              := $(OUTPUT_DIR)/$(BUILD_MODE)

ifeq ($(BUILD_MODE), debug)
    CXXFLAGS            =   $(CORE_CXXFLAGS) $(DEBUG_CXXFLAGS)
else
    CXXFLAGS            =   $(CORE_CXXFLAGS) $(RELEASE_CXXFLAGS)
endif

# 
# Select compiler
#
GPP                     = g++

###################     Begin Targets       ######################

# Implicit rule to build .o into the build directory from .cc
$(OUTPUT_DIR)/%.o : %.cpp
	$(GPP) -c $(CXXFLAGS) $< -o $@


.PHONY: all base lptest clean
all: base lptest

base:
	mkdir -p $(OUTPUT_DIR)

clean:
	rm -Rf autom4te.cache config.*

lptest:
	$(GPP) $(CXXFLAGS) *.cpp ../src/*.cpp $(LUA_INCLUDES)/liblua.a -o $(OUTPUT_DIR)/lptest $(LIBS)

PACKAGE_NAME = LunarProbe-$(MAJOR_VERSION).$(MINOR_VERSION).$(BUILD_VERSION)
# 
# Creates the archive.
#
package:
	@rm -f /tmp/$(PACKAGE_NAME).zip /tmp/$(PACKAGE_NAME).tar.bz2 /tmp/$(PACKAGE_NAME).tar.gz
	@if [ -d /tmp/$(PACKAGE_NAME) ]; then echo "Error: Directory /tmp/$(PACKAGE_NAME) already exists." ; exit 1 ; fi
	@autoconf
	@cp -r `pwd` /tmp/$(PACKAGE_NAME)
	@tar -C /tmp -cvf /tmp/$(PACKAGE_NAME).tar $(PACKAGE_NAME)
	@gzip /tmp/$(PACKAGE_NAME).tar

