
AC_INIT(lunarprobe, 0.3.1, sri.panyam@gmail.com)

##########  Default Values  ##############

# 
# Change the version number below and 
# in the AC_INIT line above on every release.
#
MAJOR_VERSION=0
MINOR_VERSION=3
BUILD_VERSION=1
RELEASE_DATE="16 July 2009"

# 
# Check if lua exists
#
halley_include_path=/usr/local/include/halley
halley_archive_path=/usr/local/lib

lua_include_path=/usr/local/include
lua_archive_path=/usr/local/lib
build_mode=release
enable_memcheck=no

##########  DO NOT EDIT BELOW THIS LINE  ##############

dnl Check for required programs
AC_PROG_CXX
AC_PROG_CC
AC_PROG_LN_S
AC_PROG_MAKE_SET

dnl Check for halley libraries
halley_lib_fine=no
halley_hdr_fine=no

dnl Check for lua libraries
lua_lib_fine=no
lua_hdr_fine=no

# AC_CHECK_LIB([lua], [lua_open], lua_lib_fine=yes)

dnl Check for header files
AC_HEADER_STDC
AC_CHECK_HEADERS([fcntl.h stdlib.h string.h sys/time.h unistd.h])

AC_ARG_ENABLE(debug,
              [  --enable-debug         To enable debug build],
              build_mode=debug)

AC_ARG_ENABLE(memcheck,
              [  --enable-memcheck      To enable memcheck build],
              [ enable_memcheck=yes ])

AC_ARG_WITH(lua,
            [  --with-lua=[path]   Specify lua include path (default: /usr/local/include/lua)],
            lua_include_path="$withval",)

AC_ARG_WITH(lua-archive,
            [  --with-lua-archive=[path]   Specify lua archive path (default: /usr/local/lib)],
            lua_archive_path="$withval",)

echo -n "checking if lua include path (\"$lua_include_path\") exists: "
if test -d $lua_include_path; then
    lua_hdr_fine=yes
    echo yes
else
    echo no
    # exit 1;
fi

echo -n "checking if liblua.a exists in lua archive path (\"$lua_archive_path\"): "
if test -e $lua_archive_path/liblua.a; then
    lua_lib_fine=yes
    echo yes
else
    echo no
    # exit 1;
fi


AC_ARG_WITH(halley,
            [  --with-halley=[path]   Specify halley include path (default: /usr/local/include/halley)],
            [ halley_include_path="$withval" ])

AC_ARG_WITH(halley-archive,
            [  --with-halley-archive=[path]   Specify halley archive path (default: /usr/local/lib)],
            [ halley_archive_path="$withval" ])

echo -n "checking if halley include path (\"$halley_include_path\") exists: "
if test -d $halley_include_path; then
    halley_hdr_fine=yes
    echo yes
else
    echo no
    # exit 1;
fi

echo -n "checking if libhalley.a exists in halley archive path (\"$halley_archive_path\"): "
if test -e $halley_archive_path/libhalley.a; then
    halley_lib_fine=yes
    echo yes
else
    echo no
    # exit 1;
fi






dnl Check for required typedefs, structures and compiler characteristics
AC_HEADER_STDBOOL
AC_C_CONST
AC_TYPE_UID_T
AC_C_INLINE
AC_TYPE_MODE_T
AC_TYPE_OFF_T
AC_TYPE_SIZE_T
AC_HEADER_TIME
AC_STRUCT_TM

dnl Check for required library functions
AC_FUNC_MALLOC
AC_FUNC_MKTIME
AC_FUNC_REALLOC
AC_FUNC_STAT
AC_FUNC_VPRINTF
AC_CHECK_FUNCS([gettimeofday localtime_r memset mkdir strcasecmp])

dnl Check for required system services

AC_SUBST(MAJOR_VERSION)
AC_SUBST(MINOR_VERSION)
AC_SUBST(BUILD_VERSION)
AC_SUBST(lua_include_path)
AC_SUBST(lua_archive_path)
AC_SUBST(halley_include_path)
AC_SUBST(halley_archive_path)
AC_SUBST(build_mode)
AC_SUBST(RELEASE_DATE)

dnl Create the necessary files.

AC_OUTPUT([ Makefile.common Makefile src/Makefile test/Makefile ])

if test "$halley_hdr_fine" = "no" -o "$halley_lib_fine" = "no" ; then

    echo 
    echo 
    echo ===============================================
    echo "Halley headers found: $halley_hdr_fine"
    echo "Halley static archive found: $halley_lib_fine"
    echo
    echo "You can either install halley and run configure again or "
    echo "specify the paths to halley headers and static archive "
    echo "if they are not in the default paths with the "
    echo "--with-halley and --with-halley-archive arguments respectively".
    echo ===============================================
    echo 
    echo 

    # exit 1;
fi

if test "$lua_hdr_fine" = "no" -o "$lua_lib_fine" = "no" ; then

    echo 
    echo 
    echo ===============================================
    echo "Lua headers found: $lua_hdr_fine"
    echo "Lua static archive found: $lua_lib_fine"
    echo
    echo "You can either install lua and run configure again or "
    echo "specify the paths to lua headers and static archive "
    echo "if they are not in the default paths with the "
    echo "--with-lua and --with-lua-archive arguments respectively".
    echo ===============================================
    echo 
    echo 

    # exit 1;
fi

echo Generating make dependancies...
make dep

