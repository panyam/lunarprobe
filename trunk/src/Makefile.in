# 
# Licensed under the Apache License, Version 2.0 (the "License"); 
# you may not use this file except in compliance with the License.  
# You may obtain a copy of the License at 
#
#       http://www.apache.org/licenses/LICENSE-2.0 
#
# Unless required by applicable law or agreed to in writing, software 
# distributed under the License is distributed on an "AS IS" BASIS, 
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
#
# See the License for the specific language governing permissions and 
# limitations under the License.
#


###############  Changeable  Parameters  ##############

include ../Makefile.common

###############  DO NOT MODIFY BELOW THIS   ##############

SHARED_LIB_NAME         = lib$(PRODUCT_NAME).so.$(VERSION)
STATIC_LIB_NAME         = lib$(PRODUCT_NAME).a.$(VERSION)

ifeq ($(BUILD_MODE), debug)
    SHARED_LIB_NAME     = lib$(PRODUCT_NAME)_debug.so.$(VERSION)
    STATIC_LIB_NAME     = lib$(PRODUCT_NAME)_debug.a.$(VERSION)
endif

SHARED_LIB_OUTPUT       =   "$(OUTPUT_DIR)/$(SHARED_LIB_NAME)"
STATIC_LIB_OUTPUT       =   "$(OUTPUT_DIR)/$(STATIC_LIB_NAME)"

# 
# Sources
#
LIB_SRCS    =   LuaBindings.cpp LuaUtils.cpp LunarProbe.cpp     \
                DebugContext.cpp Debugger.cpp MutexUtils.cpp

# 
# Corresponding obj files
#
LIB_OBJS    = $(foreach obj, $(patsubst %.cpp,%.o,$(LIB_SRCS)), $(OUTPUT_DIR)/$(obj))

# 
# Libraries to include
#
LIBS    = 

###################     Begin Targets       ######################

all: base static shared
	@echo LIB_INSTALL_DIR     = $(LIB_INSTALL_DIR)
	@echo INCLUDE_INSTALL_DIR = $(INCLUDE_INSTALL_DIR)

shared: base $(LIB_OBJS)
	$(GPP) -shared $(CXXFLAGS) $(LIB_OBJS) -o "$(SHARED_LIB_OUTPUT)" $(LIBS) -lstdc++
	rm -f "$(OUTPUT_DIR)/lib$(PRODUCT_NAME).so"
	ln -s "$(SHARED_LIB_NAME)" "$(OUTPUT_DIR)/lib$(PRODUCT_NAME).so"

static: base $(LIB_OBJS)
	ar rcs "$(STATIC_LIB_OUTPUT)" $(LIB_OBJS)
	rm -f "$(OUTPUT_DIR)/lib$(PRODUCT_NAME).a"
	ln -s "$(STATIC_LIB_NAME)" "$(OUTPUT_DIR)/lib$(PRODUCT_NAME).a"

install: shared static
	@echo "Copying library files..."
	mkdir -p "$(LIB_INSTALL_DIR)"
	mkdir -p "$(INCLUDE_INSTALL_DIR)/lunarprobe"
	cp -f "$(SHARED_LIB_OUTPUT)" "$(LIB_INSTALL_DIR)"
	cp -f "$(STATIC_LIB_OUTPUT)" "$(LIB_INSTALL_DIR)"
	rm -f "$(LIB_INSTALL_DIR)/lib$(PRODUCT_NAME).so"
	ln -s "$(LIB_INSTALL_DIR)/$(SHARED_LIB_NAME)" "$(LIB_INSTALL_DIR)/lib$(PRODUCT_NAME).so"
	@echo "Copying header files..."
	cp -f *.h $(INCLUDE_INSTALL_DIR)/lunarprobe

base:
	@mkdir -p "$(OUTPUT_DIR)"

.PHONY: clean cleanall distclean
clean:
	@rm -f $(FS_OBJS) $(LIB_OBJS) $(ENTRY_OBJS)

cleanall: clean
	@rm -f "$(SHARED_LIB_OUTPUT)" "$(STATIC_LIB_OUTPUT)"
	@rm -f "$(OUTPUT_DIR)/lib$(PRODUCT_NAME).so"
	@rm -f "$(OUTPUT_DIR)/lib$(PRODUCT_NAME).a"

distclean: cleanall
	@rm -f Makefile

help:
	@echo   "Usage: make <options> <targets>"
	@echo   "   Options:"
	@echo   "       BUILD_MODE=[debug | release]    -   Default: release"
	@echo   "       OUTPUT_DIR=<output_dir>         -   Directory to place all outputs. Default: bld"
	@echo   "       LUA_INCLUDES=<lua_dir>          -   Location of lua.
	@echo   "   Targets:"
	@echo   "       all:        Create static and shared libraries (default)"
	@echo   "       shared:     Shared Library output"
	@echo   "       static:     Static Library output"
	@echo   "       install:    Installs shared and static libraries"
	@echo   "       base:       Core/Base checks (building output dirs etc)"
	@echo   "       clean:      Cleans all object files"
	@echo   "       cleanall:   Cleans all object files and executables"
	@echo   "       dep:        Build source/project dependencies"
	@echo   "       help:       Prints help information about targets and options"

dep:
	makedepend -Y -p"$(OUTPUT_DIR)/" -I../src -- $(LIB_SRCS)

